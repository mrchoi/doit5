<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ckstack.ckpush.dao.plymind.AppointmentDao">

    <sql id="AppointmentColumn">
        member_srl,
        advisor_srl,
        application_srl,
        appointment_date,
        appointment_time,
        appointment_status,
        c_date,
        u_date
    </sql>

    <insert id="add" parameterType="AppointmentEntity" keyProperty="appointment_srl" keyColumn="appointment_srl" useGeneratedKeys="true">
        INSERT INTO tbl_plymind_appointment (
          <include refid="AppointmentColumn" />
        ) VALUES (
            #{member_srl},
            #{advisor_srl},
            #{application_srl},
            #{appointment_date},
            #{appointment_time},
            #{appointment_status},
            #{c_date},
            #{u_date}
        )
    </insert>

    <update id="changeStatus" parameterType="java.util.Map">
        UPDATE tbl_plymind_appointment
        <set>
            appointment_status = #{appointment_status}
        </set>
        <where>
            appointment_srl = #{appointment_srl}
        </where>
    </update>

    <update id="cancel" parameterType="java.util.Map">
        UPDATE tbl_plymind_appointment
        <set>
            appointment_status = 2
        </set>
        <where>
            <if test="_parameter.containsKey('application_srl') and application_srl > 0">
                application_srl = #{application_srl}
            </if>
            <if test="_parameter.containsKey('application_srls') and application_srls != null and _parameter.get('application_srls').size > 0">
                application_srl IN
                <foreach item="item" index="index" collection="application_srls" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="change" parameterType="java.util.Map">
        UPDATE tbl_plymind_appointment
        <set>
            appointment_date = #{appointmentEntity.appointment_date},
            appointment_time = #{appointmentEntity.appointment_time},
            u_date = UNIX_TIMESTAMP()
        </set>
        <where>
            appointment_srl = #{appointmentEntity.appointment_srl}
        </where>
    </update>

    <select id="countAppointment" parameterType="java.util.Map" resultType="long">
        SELECT COUNT(1) as cnt
        FROM tbl_plymind_appointment A, tbl_plymind_application B, tbl_member C
        <where>
            A.application_srl = B.application_srl AND A.member_srl = C.member_srl
            <if test="_parameter.containsKey('member_srl') and member_srl > 0">
                AND A.member_srl = #{member_srl}
            </if>
            <if test="_parameter.containsKey('advisor_srl') and advisor_srl > 0">
                AND A.advisor_srl = #{advisor_srl}
            </if>
            <if test="_parameter.containsKey('application_statues') and application_statues != null and _parameter.get('application_statues').size > 0">
                AND B.application_status IN
                <foreach item="item" index="index" collection="application_statues" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="_parameter.containsKey('advisor_srls') and advisor_srls != null and _parameter.get('advisor_srls').size > 0">
                AND A.advisor_srl IN
                <foreach item="item" index="index" collection="advisor_srls" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="_parameter.containsKey('product_srls') and product_srls != null and _parameter.get('product_srls').size > 0">
                AND B.product_srl IN
                <foreach item="item" index="index" collection="product_srls" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="_parameter.containsKey('user_name') and user_name != null">
                AND C.user_name LIKE CONCAT('', CONCAT('%', #{user_name}, ''), '%')
            </if>
        </where>
    </select>

    <select id="getAppointmentList" parameterType="java.util.Map" resultMap="com.ckpush.result.AppointmentEntity">
        SELECT
        A.appointment_srl AS appointment_srl,
        A.member_srl  AS member_srl,
        A.advisor_srl AS advisor_srl,
        A.application_srl AS application_srl,
        A.appointment_date AS appointment_date,
        A.appointment_time AS appointment_time,
        A.appointment_status AS appointment_status,
        B.application_group AS application_group,
        B.application_number AS application_number,
        B.product_srl AS product_srl,
        C.user_name AS user_name
        FROM tbl_plymind_appointment A, tbl_plymind_application B, tbl_member C
        <where>
            A.application_srl = B.application_srl AND A.member_srl = C.member_srl
            <if test="_parameter.containsKey('member_srl') and member_srl > 0">
                AND A.member_srl = #{member_srl}
            </if>
            <if test="_parameter.containsKey('advisor_srl') and advisor_srl > 0">
                AND A.advisor_srl = #{advisor_srl}
            </if>
            <if test="_parameter.containsKey('application_statues') and application_statues != null and _parameter.get('application_statues').size > 0">
                AND B.application_status IN
                <foreach item="item" index="index" collection="application_statues" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="_parameter.containsKey('advisor_srls') and advisor_srls != null and _parameter.get('advisor_srls').size > 0">
                AND A.advisor_srl IN
                <foreach item="item" index="index" collection="advisor_srls" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="_parameter.containsKey('product_srls') and product_srls != null and _parameter.get('product_srls').size > 0">
                AND B.product_srl IN
                <foreach item="item" index="index" collection="product_srls" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="_parameter.containsKey('user_name') and user_name != null">
                AND C.user_name LIKE CONCAT('', CONCAT('%', #{user_name}, ''), '%')
            </if>
        </where>
        <choose>
            <when test="_parameter.containsKey('sort') and sort != null and _parameter.get('sort').size > 0">
                <foreach item="item" index="key" collection="sort" open="ORDER BY" separator=",">
                    ${key} ${item}
                </foreach>
            </when>
            <otherwise>
                ORDER BY A.appointment_srl DESC
            </otherwise>
        </choose>
        <if test="_parameter.containsKey('offset') and _parameter.containsKey('limit') and offset >= 0 and limit >= 0">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <select id="getAppointmentBySrl" parameterType="java.util.Map" resultMap="com.ckpush.result.AppointmentEntity">
        SELECT
        A.appointment_srl AS appointment_srl,
        A.member_srl  AS member_srl,
        A.advisor_srl AS advisor_srl,
        A.application_srl AS application_srl,
        A.appointment_date AS appointment_date,
        A.appointment_time AS appointment_time,
        A.appointment_status AS appointment_status,
        B.application_group AS application_group,
        B.application_number AS application_number,
        B.product_srl AS product_srl,
        C.user_name AS user_name
        FROM tbl_plymind_appointment A, tbl_plymind_application B, tbl_member C
        <where>
            A.application_srl = B.application_srl AND A.member_srl = C.member_srl
            <if test="appointment_srl > 0">
                AND A.appointment_srl = #{appointment_srl}
            </if>
        </where>
    </select>

    <select id="getAppointmentCheckList" parameterType="java.util.Map" resultMap="com.ckpush.result.AppointmentEntity">
        SELECT
          appointment_srl,
          <include refid="AppointmentColumn" />
        FROM tbl_plymind_appointment
        <where>
            advisor_srl = #{advisor_srl} AND appointment_status IN (0, 1) AND appointment_date LIKE CONCAT('', #{yearMonth}, '%')
        </where>
    </select>
</mapper>