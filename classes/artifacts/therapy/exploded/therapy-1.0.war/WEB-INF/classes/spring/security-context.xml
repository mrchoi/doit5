<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- CKPUSH Backoffice -->
    <http pattern="/admin/**" auto-config="true" use-expressions="true" authentication-manager-ref="adminAuthenticationManager">
        <intercept-url pattern="/admin/open/**" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ROOT','ROLE_ADVISOR')" />

        <!-- access deny (403) 발생 했을때 보여줄 페이지 -->
        <access-denied-handler error-page="/admin/open/login?error=3"/>

        <form-login login-page="/admin/open/login"
                    username-parameter="user_id"
                    password-parameter="user_password"
                    login-processing-url="/admin/open/authentication"
                    authentication-failure-handler-ref="loginFailureHandler"
                    authentication-success-handler-ref="loginSuccessHandler" />

        <logout invalidate-session="true"
                logout-url="/admin/open/logout"
                logout-success-url="/admin/open/login" />

        <session-management invalid-session-url="/admin/open/login?error=2" />
    </http>

    <beans:bean id="ckUserDetailsService" class="com.ckstack.ckpush.common.security.CkUserDetailsService" />
    <beans:bean id="loginSuccessHandler" class="com.ckstack.ckpush.common.security.WebLoginSuccessHandler" />
    <beans:bean id="loginFailureHandler" class="com.ckstack.ckpush.common.security.WebLoginFailureHandler" />

    <beans:bean id="passwordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <authentication-manager id="adminAuthenticationManager">
        <authentication-provider user-service-ref="ckUserDetailsService">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>

    <!-- PlyMind Service -->
    <http pattern="/user/**" auto-config="true" use-expressions="true"  authentication-manager-ref="userAuthenticationManager">

        <intercept-url pattern="/user" access="permitAll" />
        <intercept-url pattern="/user/" access="permitAll" />
        <intercept-url pattern="/user/open/**" access="permitAll" />
        <intercept-url pattern="/user/product/product_list" access="permitAll" /><!--상담안내페이지-->
        <intercept-url pattern="/user/notice/**" access="permitAll" /><!--공지사항/이벤트 페이지-->
        <!--<intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />-->

        <!--사용자 페이지에서 상담사 로그인 시 관리자페이지로 로그인 처리 위해 추가 by kas0610 -->
        <intercept-url pattern="/user/**" access="hasAnyRole('ROLE_USER','ROLE_ADVISOR')" />



        <form-login login-page="/user/open/login"
                    username-parameter="user_id"
                    password-parameter="user_password"
                    login-processing-url="/user/open/authentication"
                    authentication-failure-handler-ref="doit5LoginFailureHandler"
                    authentication-success-handler-ref="doit5LoginSuccessHandler" />

        <logout invalidate-session="true"
                logout-url="/user/open/logout"
                logout-success-url="/user/open/login" />
    </http>

    <beans:bean id="doit5UserDetailsService" class="com.ckstack.ckpush.common.security.Doit5UserDetailsService" />
    <beans:bean id="doit5LoginSuccessHandler" class="com.ckstack.ckpush.common.security.Doit5LoginSuccessHandler" />
    <beans:bean id="doit5LoginFailureHandler" class="com.ckstack.ckpush.common.security.Doit5LoginFailureHandler" />

    <authentication-manager id="userAuthenticationManager">
        <authentication-provider user-service-ref="doit5UserDetailsService">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>
</beans:beans>

<!--
custom-filter 를 통해서 로그인 하는것.
후...이거 안해도 된다...파라미터 추가는 그냥 loginSuccessHandler 에서 처리 해도 된다...
젠장 젠장...

<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
        <intercept-url pattern="/admin/open/**" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ROOT')" />

        <access-denied-handler error-page="/admin/open/login"/>
        <custom-filter ref="ckUsernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER" />
        <logout invalidate-session="true"
                logout-url="/admin/open/logout"
                logout-success-url="/admin/open/login" />
        <session-management invalid-session-url="/admin/open/login?error=2" />
    </http>

    <beans:bean id="passwordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/admin/open/login" />
    </beans:bean>

    <beans:bean id="ckUsernamePasswordAuthenticationFilter"
                class="com.ckstack.ckpush.common.security.CkUsernamePasswordAuthenticationFilter">
        <beans:property name="passwordParameter" value="user_password" />
        <beans:property name="usernameParameter" value="user_id" />
        <beans:property name="filterProcessesUrl" value="/admin/open/authentication" />

        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="authenticationSuccessHandler" ref="loginSuccessHandler" />
        <beans:property name="authenticationFailureHandler" ref="loginFailureHandler" />
    </beans:bean>

    <beans:bean id="ckUserDetialsService" class="com.ckstack.ckpush.common.security.CkUserDetailsService" />
    <beans:bean id="loginSuccessHandler" class="com.ckstack.ckpush.common.security.WebLoginSuccessHandler" />
    <beans:bean id="loginFailureHandler" class="com.ckstack.ckpush.common.security.WebLoginFailureHandler" />

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="ckUserDetialsService">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>
</beans:beans>
-->





<!--
아래는 그냥 기본 로그인 필터를 사용하여 구성한 결과 이다. 기존 까지 사용하고 있었으나
기능이 너무 한정적이어서 custom-filter 로 수정 하였음.
참고용으로 주석 처리 해 두었음.

<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

<http auto-config="true" use-expressions="true">
    <intercept-url pattern="/admin/open/**" access="permitAll" />
    <intercept-url pattern="/admin/**" access="hasRole('ROLE_ROOT')" />


    <access-denied-handler error-page="/admin/open/login"/>
    <form-login login-page="/admin/open/login"
                username-parameter="user_id"
                password-parameter="user_password"
                login-processing-url="/admin/open/authentication"
                authentication-failure-handler-ref="loginFailureHandler"
                authentication-success-handler-ref="loginSuccessHandler" />
    <logout invalidate-session="true"
            logout-url="/admin/open/logout"
            logout-success-url="/admin/open/login" />
    <session-management invalid-session-url="/admin/open/login?error=2" />
</http>

<beans:bean id="passwordEncoder"
            class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

<beans:bean id="ckUserDetialsService" class="com.ckstack.ckpush.common.security.CkUserDetailsService" />
<beans:bean id="loginSuccessHandler" class="com.ckstack.ckpush.common.security.WebLoginSuccessHandler" />
<beans:bean id="loginFailureHandler" class="com.ckstack.ckpush.common.security.WebLoginFailureHandler" />

<authentication-manager>
    <authentication-provider user-service-ref="ckUserDetialsService">
        <password-encoder ref="passwordEncoder" />
    </authentication-provider>
</authentication-manager>

</beans:beans>
-->